#include "FastLED.h"
#define NUM_LEDS 50
CRGBArray<NUM_LEDS> leds;
int curLed = 0;
int lastInt = 0;
char* lastStuff;
bool starting = true;

void setup() {
   // Define pin #12 as input and activate the internal pull-up resistor
   pinMode(0, INPUT_PULLUP);
   pinMode(1, INPUT_PULLUP);
   pinMode(2, INPUT_PULLUP);
   pinMode(3, INPUT_PULLUP);
   pinMode(4, INPUT_PULLUP);
   pinMode(5, INPUT_PULLUP);
   pinMode(6, INPUT_PULLUP);
   pinMode(7, INPUT_PULLUP);
   // Define pin #13 as output, for the LED
   FastLED.addLeds<NEOPIXEL, 17>(leds, NUM_LEDS); 
}

char color[1] = {'r'};
int curHue = 1;
void setLedArray(char* a, int* l){
    for(int i = 6; i --> 0;){
        if(a[i] == 'r'){
            leds[l[i]]= CHSV(200,255,255);FastLED.show();
            a[i] = 'r';
        }else if(a[i]=='b'){
            leds[l[i]]= CHSV(125,255,255);FastLED.show();
            a[i] = 'b';
        }else{
          if(color[0] == 'r'){
            leds[l[i]]= CHSV(200,255,255);FastLED.show();
          }else{
            leds[l[i]]= CHSV(125,255,255);FastLED.show();
          }
          FastLED.delay(30);leds[l[i]] = CHSV(5,255,255);FastLED.show();
        }
    }
    if(color[0] == 'r'){
        color[0] = 'b';
        curHue = 100;
    }else{
        color[0] = 'r';
        curHue = 1;
    }
}

void selectRow(char* a, int* l){
    bool changed = false;
    for(int i=0; i<6; i++){
      if (changed == false){
        if (a[i] != 'r'){
          if (a[i] != 'b'){
            changed = true;
            curLed = l[i];
            lastStuff = a;
            lastInt = i;
            starting = false;
            a[i] = color[0];
          }
        }
      }
    }
    setLedArray(a, l);
}

void resetLastMove(){
  if(color[0]=='r'){
    color[0] = 'b';
  }else{
    color[0] = 'r';
  }
  lastStuff[lastInt] = '1';
   FastLED.delay(150);leds[curLed] = CHSV(5,255,255);FastLED.show();
}

char az[6] = {'1','2','3','4','5','6'};
void rowA(){
  int al[6] = {8,9,10,11,12,13};
  selectRow(az, al);
}
 char b[6] = {'1','2','3','4','5','6'};
void rowB(){
  int bl[6] = {19, 18, 17, 16, 15, 14};
  selectRow(b, bl);
}

char c[6] = {'1','2','3','4','5','6'};
void rowC(){
  int cl[6] = {20,21,22,23,24,25};
  selectRow(c, cl);
}

char d[6] = {'1','2','3','4','5','6'};
void rowD(){
  int dl[6] = {31, 30, 29, 28, 27, 26};
  selectRow(d, dl);
}

char e[6] = {'1','2','3','4','5','6'};
void rowE(){
  int el[6] = {32,33,34,35,36,37};
  selectRow(e, el);
}

char f[6] = {'1','2','3','4','5','6'};
void rowF(){
  int fl[6] = {43, 42, 41, 40, 39, 38};
  selectRow(f, fl);
}

char g[6] = {'1','2','3','4','5','6'};
void rowG(){
  int gl[6] = {44, 45, 46, 47, 48, 49};
  selectRow(g, gl);
}

void resetBoard(char* az, char* b, char* c, char* d, char* e, char* f, char* g){
  for(int cou = 0; cou < 6; cou++) { 
    az[cou] = '1';
    b[cou] = '1';
    c[cou] ='1';
    d[cou] = '1';
    e[cou] ='1';
    f[cou] ='1';
    g[cou] ='1';
  }
}
void startClear(){
  resetBoard(az,b,c,d,e,f,g);
  FastLED.clear();
  FastLED.setBrightness( 255 );
  for(int led = 0; led < 50; led++) { 
      leds[led]= CHSV(5,255,255);FastLED.show();
  }
  FastLED.show();
}
void naps(){
   FastLED.setBrightness( 0 );
   starting = false;
}
boolean LED1State = false;
boolean LED2State = false;

long buttonTimer = 0;
long longPressTime = 250;

boolean buttonActive = false;
boolean longPressActive = false;
void loop(){
  if (digitalRead(0) == LOW) {
    if (buttonActive == false) {
      buttonActive = true;
      buttonTimer = millis();
    }
    if ((millis() - buttonTimer > longPressTime) && (longPressActive == false)) {
      startClear();
      FastLED.delay(200);
    }else{
       if (starting == true){
          startClear();
        }else{
          resetLastMove();
        }
    }
  } else {
    if (buttonActive == true) {
      if (longPressActive == true) {
        longPressActive = false;
      }
      buttonActive = false;
    }
  }
   int but1 = digitalRead(1);
   int but2 = digitalRead(2);
   if (but1 == LOW){
    if (but2 == LOW){
      naps();
      FastLED.delay(100);
    }else{
      rowA();
      FastLED.delay(100);
    }
   }
   if (but2 == LOW){
      rowB();
      FastLED.delay(100);
   }
   int but3 = digitalRead(3);
   if (but3 == LOW){
      rowC();
      FastLED.delay(100);
   }
   int but4 = digitalRead(4);
   if (but4 == LOW){
      rowD();
      FastLED.delay(100);
   }
   int but5 = digitalRead(5);
   if (but5 == LOW){
      rowE();
      FastLED.delay(100);
   }
   int but6 = digitalRead(6);
   if (but6 == LOW){
      rowF();
      FastLED.delay(100);
   }
   int but7 = digitalRead(7);
   if (but7 == LOW){
      rowG();
      FastLED.delay(100);
   }
}